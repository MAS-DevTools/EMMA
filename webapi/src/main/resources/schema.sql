DROP TABLE IF EXISTS USER_MASTER;

CREATE TABLE USER_MASTER (
  id VARCHAR(250)  PRIMARY KEY,
  first_name VARCHAR(250) NOT NULL,
  last_name VARCHAR(250) NOT NULL,
  email VARCHAR(250) NOT NULL,
  Profile_Type VARCHAR(250) NOT NULL

);

-- CREATE SEQUENCE HIBERNATE_SEQUENCE START WITH 1 INCREMENT BY 1;

DROP TABLE IF EXISTS ORGANISATION;

CREATE TABLE ORGANISATION (
  org_id VARCHAR(250)  PRIMARY KEY,
  organisation_name VARCHAR(250) NOT NULL UNIQUE,
  guid VARCHAR(250) NOT NULL UNIQUE,
  email VARCHAR(250) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS USER_DETAIL;

CREATE TABLE USER_DETAIL (
  id VARCHAR(250) PRIMARY KEY,
  birthday DATE NOT NULL,
  street_name VARCHAR(250) NOT NULL,
  house_number VARCHAR(250) NOT NULL,
  zip VARCHAR(250) NOT NULL,
  city VARCHAR(250) NOT NULL,
  phonenumber VARCHAR(250) NOT NULL,
  profile_status VARCHAR(250) NOT NULL,
  last_seen DATE NOT NULL
);


DROP TABLE IF EXISTS APP_AUTH;

CREATE TABLE APP_AUTH (
  id VARCHAR(250) PRIMARY KEY,
  application_name VARCHAR(250) NOT NULL,
  guid VARCHAR(250) NOT NULL,
  email VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS AUTH;

CREATE TABLE AUTH (
  id VARCHAR(250) PRIMARY KEY,
  auth VARCHAR(250) NOT NULL,
  auth_key VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS EMMA_ROLE;

CREATE TABLE EMMA_ROLE (
  row_id INT PRIMARY KEY,
  role_id INT NOT NULL,
  user_id VARCHAR(250) NOT NULL,
  organisation_id VARCHAR(250) NOT NULL,
  role_name VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS USER_MASTER_ORGANISATION;

CREATE TABLE USER_MASTER_ORGANISATION (
  row_id INT NOT NULL PRIMARY KEY,
  uid VARCHAR(250) NOT NULL,
  org_id VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS GROUP_MEMBER;

CREATE TABLE GROUP_MEMBER (
  id INT NOT NULL PRIMARY KEY,
  group_id VARCHAR(250) NOT NULL,
  user_id VARCHAR(250) NOT NULL,
  is_administrator BIT NOT NULL,
  joined_on DATE NULL,
  last_seen DATE NULL
);

DROP TABLE IF EXISTS TOPIC_GROUP;

CREATE TABLE TOPIC_GROUP (
  id INT NOT NULL PRIMARY KEY,
  group_id VARCHAR(250) NOT NULL,
  created_by VARCHAR(250) NOT NULL,
  created_on DATE NULL,
  organisation_id VARCHAR(250) NOT NULL,
  group_name VARCHAR(250) NOT NULL,
  is_external_accessible BIT  NOT NULL,
  is_public BIT NOT NULL
);

DROP TABLE IF EXISTS MESSAGE;

CREATE TABLE MESSAGE (
  id INT NOT NULL PRIMARY KEY,
  sender VARCHAR(250) NOT NULL,
  send_to VARCHAR(250) NOT NULL,
  send_date DATE NOT NULL,
  read_on DATE NULL,
  body VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS GROUP_MESSAGE;

CREATE TABLE GROUP_MESSAGE (
  id INT NOT NULL PRIMARY KEY,
  sender VARCHAR(250) NOT NULL,
  send_to VARCHAR(250) NOT NULL,
  send_date DATE NOT NULL,
  read_on DATE NULL,
  body VARCHAR(250) NOT NULL
);

DROP TABLE IF EXISTS CONVERSATION;

CREATE TABLE CONVERSATION (
  id INT NOT NULL ,
  user_id VARCHAR(250) NOT NULL ,
  send_to VARCHAR(250) NOT NULL
);




